
function TaskByUserCtrl($scope,$routeParams,session,socket){session.auth();var userId=$routeParams.id||localStorage.id;var userActive=localStorage.id;var overActive;socket.emit('get tasks by user',userId);socket.on('return tasks by user',function(response){if(response[0].userAssigned._id==userId){$scope.tasks=response;}});if(userActive===userId){$('[data-state]').on('dragend','[draggable]',function(event){var taskList=[];var state=$(this).parent().attr('data-state');var index=$(this).attr('data-index');var targetState=$(overActive).attr('data-state');for(var i=0;i<$scope.tasks.length;i++){if($scope.tasks[i].state===parseInt(state)){taskList.push($scope.tasks[i]);};};var targetTask=taskList[index];var targetTaskId=targetTask['_id'];var targetTaskUserAssigned=targetTask['userAssigned'];targetTask.project=targetTask.project._id;if((targetTask.state==='1'&&targetTask.userAssigned===null)||targetTask.userAssigned===null){targetTask.userAssigned=userId;}else{targetTask.userAssigned=targetTask.userAssigned._id;}
targetTask.state=targetState;delete targetTask["$$hashKey"];socket.emit('edit task',{id:targetTask._id,data:targetTask});setTimeout(function(){socket.emit('get tasks by user',userId);},100);});$('[data-state]').on('dragover',function(event){$(this).addClass('active');overActive=$(this);});$('[data-state]').on('dragleave',function(event){$(this).removeClass('active');});}};